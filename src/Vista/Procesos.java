/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import javax.swing.table.DefaultTableModel;
import Code.Lista;
import Code.Nodo;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author fernando
 */
public class Procesos extends javax.swing.JFrame {

    /**
     * Creates new form Procesos
     */
    public Procesos() {
        initComponents();
    }
    Lista lista = new Lista();
    int acumuladorCPU=0;
    int cantProcesos = 1;
    int tiempoEspera;
    public int quantum = 0;
    int CPU = 0;
    int tiempoLlegada = 0;
    int prioridad = 0;
    String bloqueado = "       SÃ­";
    String estado;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        TxtQuantum = new javax.swing.JTextField();
        TxtCPU = new javax.swing.JTextField();
        TxtPrioridad = new javax.swing.JTextField();
        TxtTiempoLlegada = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableProcesos = new javax.swing.JTable();
        BtnAgregar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableResultados = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        rdCPU = new javax.swing.JRadioButton();
        rdMixto = new javax.swing.JRadioButton();
        rdPrioridad1 = new javax.swing.JRadioButton();
        BtnCpu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Procesos");

        TxtQuantum.setName("TxtQuantum"); // NOI18N
        TxtQuantum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtQuantumActionPerformed(evt);
            }
        });

        jLabel2.setText("CPU");

        jLabel3.setText("Quantum");

        jLabel4.setText("Prioridad");

        jLabel5.setText("Tiempo de Llegada");

        TableProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proceso", "CPU", "Prioridad", "Tiempo Llegada", "Estado"
            }
        ));
        jScrollPane1.setViewportView(TableProcesos);

        BtnAgregar.setText("Agregar");
        BtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarActionPerformed(evt);
            }
        });

        TableResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proceso", "CPU", "Prioridad", "Tiempo Llegada", "Estado", "Tiempo total", "Bloqueado"
            }
        ));
        jScrollPane2.setViewportView(TableResultados);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Resultados");

        rdCPU.setText("CPU");

        rdMixto.setText("Mixto");
        rdMixto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMixtoActionPerformed(evt);
            }
        });

        rdPrioridad1.setText("Prioridad");
        rdPrioridad1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdPrioridad1ActionPerformed(evt);
            }
        });

        BtnCpu.setText("Ejecutar");
        BtnCpu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCpuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtQuantum, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(TxtCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(TxtPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TxtTiempoLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BtnAgregar)
                                .addGap(26, 26, 26)
                                .addComponent(BtnCpu))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rdCPU)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdPrioridad1)
                                .addGap(18, 18, 18)
                                .addComponent(rdMixto)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rdCPU)
                                .addComponent(rdMixto)
                                .addComponent(rdPrioridad1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TxtQuantum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TxtCPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TxtPrioridad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TxtTiempoLlegada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnAgregar)
                            .addComponent(BtnCpu))
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtQuantumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtQuantumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtQuantumActionPerformed

    private void BtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarActionPerformed
        // TODO add your handling code here:
        ingresar();
        limpiarTxt();
    }//GEN-LAST:event_BtnAgregarActionPerformed

    private void rdMixtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMixtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdMixtoActionPerformed

    private void rdPrioridad1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdPrioridad1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdPrioridad1ActionPerformed

    private void BtnCpuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCpuActionPerformed
        // TODO add your handling code here:
        if(rdCPU.isSelected()){
            lista.FifoCPU(lista);
            lista.ordenarCPU(lista);
            ingresarResultado();
            new Thread(new Hilo()).start();
        }else if(rdPrioridad1.isSelected()){
            lista.Fifo(lista);
            lista.Prioridad(lista);
            ingresarResultado();
            new Thread(new Hilo()).start(); 
        }else if(rdMixto.isSelected()){
            lista.Prioridad(lista);
            lista.MIX(lista);
            ingresarResultado();
            new Thread(new Hilo()).start(); 
        }
         
    }//GEN-LAST:event_BtnCpuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Procesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Procesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Procesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Procesos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Procesos().setVisible(true);
            }
        });
    }
    
    private class Hilo implements Runnable{ //Objeto de tipo Hilo con extension ejectubale
    @Override
    public void run(){
        //int estado=1; //Estado de while que indica si se puede seguir o no
        int fila=0; // contador de while
        //ordenarMenor();
        int quantumO = quantum, tiempoEspera = 0;
        Nodo actual = lista.inicioLista;
        
                do{
                    while(actual != null){
                    if(actual.estado != "Terminado"){
                        while(quantum > 0 && actual.CPU > 0){
                            if(actual.CPU > 0){
                                actual.CPU -= 1;
                                acumuladorCPU --;
                                TableResultados.setValueAt(actual.CPU, fila, 1);
                                Dormir();
                                quantum--;
                            }
                        }
                        tiempoEspera += quantumO - quantum;
                        TableResultados.setValueAt(tiempoEspera+" segundos", fila, 5);
                        Dormir();
                        quantum = quantumO;

                       if(actual.CPU >0){
                           TableResultados.setValueAt(bloqueado, fila, 6);
                           actual.estado = "Bloqueado";
                           TableResultados.setValueAt(actual.estado, fila, 4);
                           
                           Dormir();
                       }
                       if(actual.CPU <= 0){
                           actual.estado = "Terminado";
                           TableResultados.setValueAt(actual.estado, fila, 4);
                           Dormir();
                       }
                    }
                actual.tiempoespera = tiempoEspera - actual.tiempoLlegada;
                actual = actual.siguiente;
                fila++;
                }
                
                if(actual == null && acumuladorCPU > 0){
                    actual = lista.inicioLista;
                    fila = 0;
                }

            }while(acumuladorCPU > 0);
        
        }
    }
    public void ingresar(){
        DefaultTableModel modelo = (DefaultTableModel) TableProcesos.getModel();
        
        quantum = Integer.parseInt(TxtQuantum.getText());
        CPU = Integer.parseInt(TxtCPU.getText());
        prioridad = Integer.parseInt(TxtPrioridad.getText());
        tiempoLlegada = Integer.parseInt(TxtTiempoLlegada.getText());
        tiempoEspera = 0;
        estado = "Listo";
        acumuladorCPU +=Integer.parseInt(TxtCPU.getText());
        //int residuo = 0;
        
        Nodo nodo = new Nodo(cantProcesos, CPU, prioridad, tiempoLlegada, estado, tiempoEspera);
    
        //llenamos la tabla obteniendo los datos del nodo reciÃ©n agregado
        cantProcesos ++;
        Object[] tabla = new Object[5];
        tabla[0] = nodo.obtenerProceso();
        tabla[1] = nodo.obtenerCPU();//TxtCPU.getText();
        tabla[2] = nodo.obtenerPrioridad();//TxtPrioridad.getText();
        tabla[3] = nodo.obtenerTiempollegada();//TxtTiempoLlegada.getText();
        tabla[4] = nodo.obtenerEstado();
        modelo.addRow(tabla);
        TableProcesos.setModel(modelo);
        TxtCPU.grabFocus();
        
        //agrego el nuevo nodo creado a la lista
        lista.agregar(nodo);
    }
    
    public void ingresarResultado(){
        DefaultTableModel modelo = (DefaultTableModel) TableResultados.getModel();
        
        //lista.ordenarCPU(lista);
        
        for(int i = 1; i<=lista.size; i++){
            Nodo nodo;
            
            nodo = lista.obtener(i);
            //System.out.println(nodo.proceso);
            Object[] tabla = new Object[5];
            tabla[0] = nodo.proceso;
            tabla[1] = nodo.CPU;//TxtCPU.getText();
            tabla[2] = nodo.prioridad;//TxtPrioridad.getText();
            tabla[3] = nodo.tiempoLlegada;//TxtTiempoLlegada.getText();
            tabla[4] = nodo.estado;
            modelo.addRow(tabla);
            TableResultados.setModel(modelo);
        }
        
        
        
        
    }
    
    public void limpiarTxt(){
        TxtCPU.setText("");
        TxtPrioridad.setText("");
        TxtTiempoLlegada.setText("");
    }
    public void Dormir(){
    try{
        Thread.sleep(700); //Dormir sistema
    }catch(InterruptedException ex){
        Logger.getLogger(Procesos.class.getName()).log(Level.SEVERE,null,ex);
    }

}
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregar;
    private javax.swing.JButton BtnCpu;
    private javax.swing.JTable TableProcesos;
    private javax.swing.JTable TableResultados;
    private javax.swing.JTextField TxtCPU;
    private javax.swing.JTextField TxtPrioridad;
    private javax.swing.JTextField TxtQuantum;
    private javax.swing.JTextField TxtTiempoLlegada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdCPU;
    private javax.swing.JRadioButton rdMixto;
    private javax.swing.JRadioButton rdPrioridad1;
    // End of variables declaration//GEN-END:variables
}
